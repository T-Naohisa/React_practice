useState:
関数コンポーネントで state を管理する(保持と更新)ためのフック
state→ コンポーネント内部で保持する状態。データとか

useEffect:
関数の実行タイミングを React のレンダリング後まで遅らせる hook
第 1 引数には実行したい処理、第 2 引数には依存する変数を記載する
※第 2 引数を書かない場合レンダリングのたびに処理が走るので気を付けること
return でクリーンアップ処理を記載することができる
（イベントリスナの削除やタイマーの削除など）
実行タイミングはアンマウント時

useContext:
そもそもコンテキストとは？
通常データはpropsを通して親から子に渡すようにするがその仕組みをなくし
橋渡しをしなくてもデータを深い階層まで渡せる仕組み
Context.Providerのvalueに値を定義する
Providerが更新された場合useContextを使用しているコンポーネントも最レンダリングする

useReducer
Reduxを使わずコンポーネントで管理ができるようにする
useContextと組み合わせることでReduxを使わず同じようにグローバルにデータを扱える

